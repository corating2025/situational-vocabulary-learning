{"ast":null,"code":"import React,{useState}from'react';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HuntContainer=styled.div`\n  position: fixed;\n  right: 20px;\n  top: 20px;\n  background: white;\n  padding: 20px;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n  width: 350px;\n  max-height: 40vh;\n  overflow-y: auto;\n  z-index: 5;\n`;const HuntTitle=styled.h2`\n  text-align: center;\n  color: #2c3e50;\n  margin-bottom: 20px;\n`;const HuntList=styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;const HuntItem=styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 10px;\n  border-radius: 8px;\n  background: ${props=>props.found?'#e8f5e9':'#f5f5f5'};\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateX(5px);\n  }\n`;const ItemText=styled.span`\n  flex: 1;\n  font-size: 1.1rem;\n  color: #333;\n  display: flex;\n  flex-direction: column;\n`;const EnglishText=styled.span`\n  margin-bottom: 2px;\n`;const ChineseText=styled.span`\n  font-size: 0.9rem;\n  color: #666;\n`;const ItemIcon=styled.span`\n  font-size: 2rem;\n  margin-right: 10px;\n`;const SpeakButton=styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.2rem;\n  padding: 5px;\n  border-radius: 50%;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: #f0f0f0;\n  }\n`;const CheckBox=styled.input`\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n`;const huntItems=[{text:'something green',hint:'Look for leaves or plants',icon:'🌿',chinese:'绿色的东西'},{text:'something red',hint:'Look for flowers or berries',icon:'🌹',chinese:'红色的东西'},{text:'a bug',hint:'Look for small insects',icon:'🐞',chinese:'一只虫子'},{text:'a puddle',hint:'Look for water on the ground',icon:'💧',chinese:'一滩水'},{text:'something feathery',hint:'Look for birds',icon:'🪶',chinese:'有羽毛的东西'},{text:'a rock',hint:'Look on the ground',icon:'🪨',chinese:'一块石头'},{text:'something smelly',hint:'Use your nose',icon:'👃',chinese:'有味道的东西'},{text:'a bud',hint:'Look for new growth',icon:'🌱',chinese:'一个花蕾'},{text:'something making noise',hint:'Listen carefully',icon:'🔊',chinese:'会发出声音的东西'},{text:'something flying',hint:'Look in the air',icon:'🦋',chinese:'会飞的东西'},{text:'something planted',hint:'Look in the garden',icon:'🌱',chinese:'种植的东西'},{text:'a flower',hint:'Look for colorful blooms',icon:'🌸',chinese:'一朵花'},{text:'something yellow',hint:'Look for bright colors',icon:'💛',chinese:'黄色的东西'},{text:'smooth bark',hint:'Feel the tree trunk',icon:'🌳',chinese:'光滑的树皮'},{text:'a tree with flowers',hint:'Look up at the trees',icon:'🌺',chinese:'开花的树'},{text:'something brown',hint:'Look for earth tones',icon:'🟫',chinese:'棕色的东西'}];function SpringHunt(_ref){let{speak}=_ref;const[foundItems,setFoundItems]=useState(new Set());const toggleItem=text=>{const newFoundItems=new Set(foundItems);if(newFoundItems.has(text)){newFoundItems.delete(text);}else{newFoundItems.add(text);speak(text);}setFoundItems(newFoundItems);};return/*#__PURE__*/_jsxs(HuntContainer,{children:[/*#__PURE__*/_jsx(HuntTitle,{children:\"First Trial \\u521D\\u4F53\\u9A8C\"}),/*#__PURE__*/_jsx(HuntList,{children:huntItems.map(_ref2=>{let{text,hint,icon,chinese}=_ref2;return/*#__PURE__*/_jsxs(HuntItem,{found:foundItems.has(text),children:[/*#__PURE__*/_jsx(CheckBox,{type:\"checkbox\",checked:foundItems.has(text),onChange:()=>toggleItem(text)}),/*#__PURE__*/_jsx(ItemIcon,{children:icon}),/*#__PURE__*/_jsxs(ItemText,{children:[/*#__PURE__*/_jsx(EnglishText,{children:text}),/*#__PURE__*/_jsx(ChineseText,{children:chinese})]}),/*#__PURE__*/_jsx(SpeakButton,{onClick:()=>speak(text),children:\"\\uD83D\\uDD0A\"})]},text);})}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',marginTop:'20px',fontSize:'0.9rem',color:'#666'},children:\"*You can count! (\\u53EF\\u4EE5\\u6570\\u4E00\\u6570)\"})]});}export default SpringHunt;","map":{"version":3,"names":["React","useState","styled","jsx","_jsx","jsxs","_jsxs","HuntContainer","div","HuntTitle","h2","HuntList","HuntItem","props","found","ItemText","span","EnglishText","ChineseText","ItemIcon","SpeakButton","button","CheckBox","input","huntItems","text","hint","icon","chinese","SpringHunt","_ref","speak","foundItems","setFoundItems","Set","toggleItem","newFoundItems","has","delete","add","children","map","_ref2","type","checked","onChange","onClick","style","textAlign","marginTop","fontSize","color"],"sources":["C:/Users/XXT/situational-vocabulary-learning/src/components/SpringHunt.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst HuntContainer = styled.div`\r\n  position: fixed;\r\n  right: 20px;\r\n  top: 20px;\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n  width: 350px;\r\n  max-height: 40vh;\r\n  overflow-y: auto;\r\n  z-index: 5;\r\n`;\r\n\r\nconst HuntTitle = styled.h2`\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst HuntList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n`;\r\n\r\nconst HuntItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  background: ${props => props.found ? '#e8f5e9' : '#f5f5f5'};\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: translateX(5px);\r\n  }\r\n`;\r\n\r\nconst ItemText = styled.span`\r\n  flex: 1;\r\n  font-size: 1.1rem;\r\n  color: #333;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst EnglishText = styled.span`\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nconst ChineseText = styled.span`\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n`;\r\n\r\nconst ItemIcon = styled.span`\r\n  font-size: 2rem;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst SpeakButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  padding: 5px;\r\n  border-radius: 50%;\r\n  transition: background-color 0.2s;\r\n\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n  }\r\n`;\r\n\r\nconst CheckBox = styled.input`\r\n  width: 20px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst huntItems = [\r\n  { \r\n    text: 'something green', \r\n    hint: 'Look for leaves or plants', \r\n    icon: '🌿',\r\n    chinese: '绿色的东西'\r\n  },\r\n  { \r\n    text: 'something red', \r\n    hint: 'Look for flowers or berries', \r\n    icon: '🌹',\r\n    chinese: '红色的东西'\r\n  },\r\n  { \r\n    text: 'a bug', \r\n    hint: 'Look for small insects', \r\n    icon: '🐞',\r\n    chinese: '一只虫子'\r\n  },\r\n  { \r\n    text: 'a puddle', \r\n    hint: 'Look for water on the ground', \r\n    icon: '💧',\r\n    chinese: '一滩水'\r\n  },\r\n  { \r\n    text: 'something feathery', \r\n    hint: 'Look for birds', \r\n    icon: '🪶',\r\n    chinese: '有羽毛的东西'\r\n  },\r\n  { \r\n    text: 'a rock', \r\n    hint: 'Look on the ground', \r\n    icon: '🪨',\r\n    chinese: '一块石头'\r\n  },\r\n  { \r\n    text: 'something smelly', \r\n    hint: 'Use your nose', \r\n    icon: '👃',\r\n    chinese: '有味道的东西'\r\n  },\r\n  { \r\n    text: 'a bud', \r\n    hint: 'Look for new growth', \r\n    icon: '🌱',\r\n    chinese: '一个花蕾'\r\n  },\r\n  { \r\n    text: 'something making noise', \r\n    hint: 'Listen carefully', \r\n    icon: '🔊',\r\n    chinese: '会发出声音的东西'\r\n  },\r\n  { \r\n    text: 'something flying', \r\n    hint: 'Look in the air', \r\n    icon: '🦋',\r\n    chinese: '会飞的东西'\r\n  },\r\n  { \r\n    text: 'something planted', \r\n    hint: 'Look in the garden', \r\n    icon: '🌱',\r\n    chinese: '种植的东西'\r\n  },\r\n  { \r\n    text: 'a flower', \r\n    hint: 'Look for colorful blooms', \r\n    icon: '🌸',\r\n    chinese: '一朵花'\r\n  },\r\n  { \r\n    text: 'something yellow', \r\n    hint: 'Look for bright colors', \r\n    icon: '💛',\r\n    chinese: '黄色的东西'\r\n  },\r\n  { \r\n    text: 'smooth bark', \r\n    hint: 'Feel the tree trunk', \r\n    icon: '🌳',\r\n    chinese: '光滑的树皮'\r\n  },\r\n  { \r\n    text: 'a tree with flowers', \r\n    hint: 'Look up at the trees', \r\n    icon: '🌺',\r\n    chinese: '开花的树'\r\n  },\r\n  { \r\n    text: 'something brown', \r\n    hint: 'Look for earth tones', \r\n    icon: '🟫',\r\n    chinese: '棕色的东西'\r\n  }\r\n];\r\n\r\nfunction SpringHunt({ speak }) {\r\n  const [foundItems, setFoundItems] = useState(new Set());\r\n\r\n  const toggleItem = (text) => {\r\n    const newFoundItems = new Set(foundItems);\r\n    if (newFoundItems.has(text)) {\r\n      newFoundItems.delete(text);\r\n    } else {\r\n      newFoundItems.add(text);\r\n      speak(text);\r\n    }\r\n    setFoundItems(newFoundItems);\r\n  };\r\n\r\n  return (\r\n    <HuntContainer>\r\n      <HuntTitle>First Trial 初体验</HuntTitle>\r\n      <HuntList>\r\n        {huntItems.map(({ text, hint, icon, chinese }) => (\r\n          <HuntItem key={text} found={foundItems.has(text)}>\r\n            <CheckBox \r\n              type=\"checkbox\"\r\n              checked={foundItems.has(text)}\r\n              onChange={() => toggleItem(text)}\r\n            />\r\n            <ItemIcon>{icon}</ItemIcon>\r\n            <ItemText>\r\n              <EnglishText>{text}</EnglishText>\r\n              <ChineseText>{chinese}</ChineseText>\r\n            </ItemText>\r\n            <SpeakButton onClick={() => speak(text)}>\r\n              🔊\r\n            </SpeakButton>\r\n          </HuntItem>\r\n        ))}\r\n      </HuntList>\r\n      <div style={{ textAlign: 'center', marginTop: '20px', fontSize: '0.9rem', color: '#666' }}>\r\n        *You can count! (可以数一数)\r\n      </div>\r\n    </HuntContainer>\r\n  );\r\n}\r\n\r\nexport default SpringHunt; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}